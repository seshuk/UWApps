<Page
    x:Class="ProfileSearch.ProfileView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ProfileSearch"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition From="LoadingState" GeneratedDuration="0:0:0.3" To="NormalState"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="NormalState"/>
                <VisualState x:Name="LoadingState">
                    <Storyboard>
                        <DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="LoadingGrid" d:IsOptimized="True"/>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" Storyboard.TargetName="LoadingGrid">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.3">
                                <DiscreteObjectKeyFrame.Value>
                                    <x:Boolean>True</x:Boolean>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=0 and <548 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="640" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For the most narrow windows and phones in portrait orientation, this state collapses the SplitView pane into overlay mode
                        and adds dynamic RelativePanel constraints that puts all elements stacked below each other -->
                        <Setter Target="badgesPanel.(RelativePanel.RightOf)" Value="imageGrid" />

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
       
            <VisualStateGroup x:Name="VisualStateGroup1">
                <VisualStateGroup.Transitions>
                    <VisualTransition From="LoadingState" GeneratedDuration="0:0:0.3" To="NormalState"/>
                </VisualStateGroup.Transitions>
                <VisualState>
                    <!-- VisualState to be triggered when window width is >=0 and <548 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For the most narrow windows and phones in portrait orientation, this state collapses the SplitView pane into overlay mode
                        and adds dynamic RelativePanel constraints that puts all elements stacked below each other -->
                        <Setter Target="badgesPanel.(RelativePanel.Below)" Value="imageGrid" />
                        <Setter Target="pointsPanel.(RelativePanel.Below)" Value="badgesPanel" />

                    </VisualState.Setters>
                </VisualState>

                <VisualState>
                    <!-- VisualState to be triggered when window width is >=0 and <548 effective pixels -->
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="248" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- For the most narrow windows and phones in portrait orientation, this state collapses the SplitView pane into overlay mode
                        1
                        and adds dynamic RelativePanel constraints that puts all elements stacked below each other -->
                        <Setter Target="imageGrid.(RelativePanel.AlignLeftWithPanel)" Value="true" />
                        <Setter Target="badgesPanel.(RelativePanel.RightOf)" Value="imageGrid" />
                        <Setter Target="pointsPanel.(RelativePanel.Below)" Value="badgesPanel" />
                        <Setter Target="imageGrid.Width" Value="200" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid x:Name="LoadingGrid" IsHitTestVisible="False" Opacity="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#99000000">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ProgressRing HorizontalAlignment="Center" VerticalAlignment="Bottom" Height="100" Width="100" IsActive="True" Foreground="DodgerBlue"/>
            <TextBlock Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="Black" Margin="15">Searching Profiles...</TextBlock>
        </Grid>

        <Grid Name="mainContent">
            <!--<Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="100"/>
            </Grid.RowDefinitions>

            <Grid Name="imageGrid" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>

                <Image Name="profileImage">
                </Image>
                <TextBlock Name="profileUrl" Visibility="Collapsed"></TextBlock>
                <TextBlock Name="profileName" Grid.Row="1" HorizontalAlignment ="Center" VerticalAlignment="Center" ></TextBlock>
            </Grid>
            <StackPanel Name="badgesPanel" Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Name="badgeCount" ></TextBlock>
                <TextBlock Margin="5,0,0,0">Badges Earned</TextBlock>
            </StackPanel>
            <StackPanel Name="pointsPanel" Grid.Row="3" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Name="jsPoints" ></TextBlock>
                <TextBlock Margin="5,0,0,0">JavaScript Points</TextBlock>
            </StackPanel>-->
        </Grid>

        <RelativePanel>
            <Grid Name="imageGrid" >
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="20"/>
                </Grid.RowDefinitions>

                <Image Name="profileImage" Source="Assets\SearchIcon.png">
                </Image>
                <TextBlock Name="profileUrl" Visibility="Collapsed"></TextBlock>
                <TextBlock Name="profileName" Grid.Row="1" HorizontalAlignment ="Center" VerticalAlignment="Center" ></TextBlock>
            </Grid>
            <!--<TextBlock RelativePanel.RightOf="imageGrid">Thisis a test</TextBlock>-->
            <StackPanel Margin="20,20"  
                        RelativePanel.AlignHorizontalCenterWithPanel="True" 
                        Name="badgesPanel" Orientation="Horizontal" 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center">
                <TextBlock Name="badgeCount" ></TextBlock>
                <TextBlock Margin="5,0,0,0">Badges Earned</TextBlock>
            </StackPanel>
            <StackPanel Margin="20,20" RelativePanel.Below="badgesPanel" RelativePanel.AlignHorizontalCenterWithPanel="True" Name="pointsPanel" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Name="jsPoints" ></TextBlock>
                <TextBlock Margin="5,0,0,0">JavaScript Points</TextBlock>
            </StackPanel>
        </RelativePanel>
    </Grid>
</Page>
